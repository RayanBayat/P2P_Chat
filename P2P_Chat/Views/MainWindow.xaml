<Window ResizeMode="NoResize" x:Class="P2P_Chat.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:P2P_Chat.Views"
        xmlns:vm ="clr-namespace:P2P_Chat.ViewModels"
        mc:Ignorable="d"
        Height="450" Width="800"  AllowsTransparency="True"
        Title="PeerToPeerChat" WindowStyle="None"
        Background="Transparent" WindowStartupLocation="CenterScreen" 
        MouseDown="Window_MouseDown">

    <!--xmlns:local="clr-namespace:P2P_Chat.Views"  
        xmlns:vm ="clr-namespace:P2P_Chat.ViewModels"
        mc:Ignorable="d"-->
    <Window.Resources>
        <Style x:Key="btns" TargetType="Button">
            <Setter Property="Background" Value="DarkCyan"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="DarkBlue"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type TextBox}"
               x:Key="ModernIP">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border CornerRadius="10"
                                Background="#415049"
                                Width="150" Height="30" RenderTransformOrigin="0.5,0.5" Margin="0,-4,0,0">
                            <Grid>
                                <Rectangle StrokeThickness="1"/>
                                <TextBox Margin="1"
                                         
                                         BorderThickness="0"
                                         Background="Transparent"
                                         VerticalAlignment="Center"
                                         Padding="5"
                                         Foreground="White"
                                         x:Name="IPbox"
                                         Text="{Binding Path=ToIP, Mode=TwoWay}"/>
                                <TextBlock IsHitTestVisible="False"
                                           Text="IP: 127.0.0.1"
                                           VerticalAlignment="Center"
                                           HorizontalAlignment="Left"
                                           Margin="10,10,0,10"
                                           FontSize="11"
                                           Foreground="DarkGray"
                                           Grid.Column="1">
                                    <TextBlock.Style>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Text, ElementName=IPbox}" Value="">
                                                    <Setter Property="Visibility" Value="Visible"></Setter>
                                                </DataTrigger>

                                            </Style.Triggers>
                                            <Setter Property="Visibility" Value="Hidden" />
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type TextBox}"
               x:Key="ModernPort">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border CornerRadius="10"
                                Background="#415049"
                                Width="150" Height="30" RenderTransformOrigin="0.5,0.5" Margin="0,-4,0,0">
                            <Grid>
                                <Rectangle StrokeThickness="1"/>
                                <TextBox Margin="1"
                                         Text="{Binding Path=Port, Mode=TwoWay}"
                                         BorderThickness="0"
                                         Background="Transparent"
                                         VerticalAlignment="Center"
                                         Padding="5"
                                         Foreground="White"
                                         x:Name="PORTbox"/>
                                <TextBlock IsHitTestVisible="False"
                                           Text="Port: 22"
                                           VerticalAlignment="Center"
                                           HorizontalAlignment="Left"
                                           Margin="10,10,0,10"
                                           FontSize="11"
                                           Foreground="DarkGray"
                                           Grid.Column="1">
                                    <TextBlock.Style>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Text, ElementName=PORTbox}" Value="">
                                                    <Setter Property="Visibility" Value="Visible"></Setter>
                                                </DataTrigger>

                                            </Style.Triggers>
                                            <Setter Property="Visibility" Value="Hidden" />
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type TextBox}"
               x:Key="ModernName">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border CornerRadius="10"
                                Background="#415049"
                                Width="150" Height="30" RenderTransformOrigin="0.5,0.5" Margin="0,-4,0,0">
                            <Grid>
                                <Rectangle StrokeThickness="1"/>
                                <TextBox Margin="1"
                                          Text="{Binding Path=Name}"
                                         BorderThickness="0"
                                         Background="Transparent"
                                         VerticalAlignment="Center"
                                         Padding="5"
                                         Foreground="White"
                                         x:Name="Namebox"/>
                                <TextBlock IsHitTestVisible="False"
                                           Text="Name: Bob"
                                           VerticalAlignment="Center"
                                           HorizontalAlignment="Left"
                                           Margin="10,10,0,10"
                                           FontSize="11"
                                           Foreground="DarkGray"
                                           Grid.Column="1">
                                    <TextBlock.Style>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Text, ElementName=Namebox}" Value="">
                                                    <Setter Property="Visibility" Value="Visible"></Setter>
                                                </DataTrigger>

                                            </Style.Triggers>
                                            <Setter Property="Visibility" Value="Hidden" />
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type Label}"
               x:Key="ModernStatus">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Label}">
                        <Border x:Name="hejhej" CornerRadius="10"
                                Background="#415049"
                                Width="150" Height="30" RenderTransformOrigin="0.5,0.5" Margin="0,-4,0,0">
                            <Grid>
                                <Rectangle StrokeThickness="1"/>
                                <Label x:Name="something" Margin="1"
                                         Content="{Binding Path=Status,NotifyOnTargetUpdated=True, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                         BorderThickness="0"
                                         Background="Transparent"
                                         VerticalAlignment="Center"
                                         Padding="5"
                                         Foreground="White"
                                         
                                        TargetUpdated="Statusupdater"
                                         />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type TextBox}"
               x:Key="ModernSearch">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border CornerRadius="10"
                                Background="#415049"
                                Width="150" Height="30" RenderTransformOrigin="0.5,0.5" Margin="0,-4,0,0">
                            <Grid>
                                <Rectangle StrokeThickness="1"/>
                                <TextBox Margin="1"
                                          Text="{Binding Path=Search, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                         BorderThickness="0"
                                         Background="Transparent"
                                         VerticalAlignment="Center"
                                         Padding="5"
                                         Foreground="White"
                                         x:Name="Namebox"/>
                                <TextBlock IsHitTestVisible="False"
                                           Text="Search"
                                           VerticalAlignment="Center"
                                           HorizontalAlignment="Left"
                                           Margin="10,10,0,10"
                                           FontSize="11"
                                           Foreground="DarkGray"
                                           Grid.Column="1">
                                    <TextBlock.Style>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Text, ElementName=Namebox}" Value="">
                                                    <Setter Property="Visibility" Value="Visible"></Setter>
                                                </DataTrigger>

                                            </Style.Triggers>
                                            <Setter Property="Visibility" Value="Hidden" />
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Border CornerRadius="30" Background="#1B1F29" Grid.ColumnSpan="4" Grid.RowSpan="5"
            BorderBrush="#415049" BorderThickness="10">


        <Grid Height="400" Margin="10">




            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*"></ColumnDefinition>
                <ColumnDefinition Width="2*"></ColumnDefinition>
                <ColumnDefinition Width="2*"></ColumnDefinition>
                <ColumnDefinition Width="2*"></ColumnDefinition>

            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="7*"></RowDefinition>
                <RowDefinition Height="7*"></RowDefinition>
                <RowDefinition Height="7*"></RowDefinition>
                <RowDefinition Height="7*"></RowDefinition>
                <RowDefinition Height="7*"></RowDefinition>
            </Grid.RowDefinitions>
            <!--<Grid.Resources>
            <vm:MainViewModel x:Key="vmc"/>
        </Grid.Resources>-->


            <Button x:Name="btnMinimize"
                 BorderThickness="0" Content="-" Foreground="Black" FontSize="16"
                 FontFamily="Montserrat" Cursor="Hand" Grid.Column="3" Margin="138,0,26,58"
                    Click="btnMinimize_Click" Style="{StaticResource btns}">
                <Button.Template>
                    <ControlTemplate TargetType="Button">
                        <Border Width="20" Height="20"
                                CornerRadius="9"
                                Background="{TemplateBinding Background}">
                            <ContentPresenter VerticalAlignment="Center"
                                              HorizontalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Button.Template>
            </Button>


            <Button x:Name="btnClose"
                 BorderThickness="0" Content="x" Foreground="Black" FontSize="16"
                 FontFamily="Montserrat" Cursor="Hand" Grid.Column="3" Margin="164,0,0,58"
                    Click="btnClose_Click"  Style="{StaticResource btns}">
                <Button.Template>
                    <ControlTemplate TargetType="Button">
                        <Border Width="20" Height="20"
                                CornerRadius="9"
                                Background="{TemplateBinding Background}">
                            <ContentPresenter VerticalAlignment="Center"
                                              HorizontalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Button.Template>

            </Button>

            <TextBox x:Name="msg" Grid.Column="1" Grid.Row="3" Text="{Binding Path=MessageToSend, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                     Margin="0,52,73,55" Grid.RowSpan="2" Grid.ColumnSpan="2" Keyboard.KeyDown="key_KeyDown"
                     TextWrapping="Wrap"/>
            <Button Name="sendbtn" Grid.Row="3" Grid.Column="2" 
                Command="{Binding MessageCommand}" CommandParameter="{Binding Path=MessageToSend}"  RenderTransformOrigin="0.506,2.062" 
                KeyDown="key_KeyDown" Margin="122,52,17,55" Grid.RowSpan="2"
                     Style="{StaticResource btns}">
                <Image Source="/Views/Send.png" Width="20"></Image>


                <Button.Template>
                    <ControlTemplate TargetType="Button">
                        <Border Width="50" Height="50"
                                CornerRadius="9"
                                Background="{TemplateBinding Background}">
                            <ContentPresenter VerticalAlignment="Center"
                                              HorizontalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Button.Template>
            </Button>


            <TextBox x:Name="name" Margin="4,66,36,66" Style="{StaticResource ModernName}" Grid.RowSpan="2"/>
            <Label Grid.Row="1" Grid.Column="0"  Margin="4,19,36,34" Style="{StaticResource ModernStatus}"/>
            <!--port and ip-->
            <TextBox x:Name="textBox"  Margin="2,0,34,50" Style="{StaticResource ModernIP}" RenderTransformOrigin="0.5,0.5">
            </TextBox>
            <TextBox  Margin="2,30,34,15" Style="{StaticResource ModernPort}" RenderTransformOrigin="0.5,0.5">
            </TextBox>
            <Button Name="connect" Command="{Binding ToIPCommand}" Margin="0,14,139,40" Grid.Row="2" >Connect</Button>
            <Button Command="{Binding ListenCommand}" Margin="56,14,83,40" Grid.Row="2" >Listen</Button>
            <Button Command="{Binding DisconnectCommand}" Margin="109,14,20,40" Grid.Row="2" >Disconnect</Button>

            <!--closing window-->

            <TextBox x:Name="Search" Grid.Row="0" Grid.Column="3" Margin="0,53,11,0" RenderTransformOrigin="0.5,0.5" Style="{StaticResource ModernSearch}" > </TextBox>

            <!--name-->
            <Popup IsOpen="{Binding Path=PopUpActive}" Width="150" Height="100"
               PlacementTarget="{Binding ElementName=connect}"
               AllowsTransparency="True" PopupAnimation="Fade">
                <StackPanel>
                    <Label Background="Aqua" Content="Incoming connection!"/>
                    <Button Command="{Binding AcceptConnectionCommand}">Accept</Button>
                    <Button Command="{Binding DeclineConnectionCommand}">Decline</Button>
                </StackPanel>

            </Popup>
            <!--messages-->
            <!--TODO använd Panel-->
            <StackPanel Grid.Column="1" Grid.Row="0" Orientation="Vertical" Margin="0,5,10,28" Grid.RowSpan="4" Grid.ColumnSpan="2">
                <ListView Height="286"  ItemsSource="{Binding Path=Messageslist}"
                                         ScrollViewer.VerticalScrollBarVisibility="Visible"
                          
                  ScrollViewer.CanContentScroll="False">
                    <ListView.View>
                        <GridView>
                            <!--==============================================-->

                            <GridViewColumn Header="Name" DisplayMemberBinding="{Binding Path=jsname}" Width="50" />
                            <!--==============================================-->
                            <GridViewColumn Header="Message" Width="210">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock TextWrapping="Wrap" Text="{Binding Path=jsmsg}" />
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <!--==============================================-->
                            <GridViewColumn Header="Time" Width="80">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock TextWrapping="Wrap" Text="{Binding Path=jstime}" />
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <!--==============================================-->
                        </GridView>
                    </ListView.View>
                </ListView>
            </StackPanel>

            <StackPanel Grid.Column="3" Grid.Row="1" Orientation="Vertical" Margin="0,5,10,28"
                        Grid.RowSpan="4" Grid.ColumnSpan="2">
                <ListView Height="286"  ItemsSource="{Binding Path=ConvoHistory}" x:Name="historylist"
                                         ScrollViewer.VerticalScrollBarVisibility="Visible"
                          
                  ScrollViewer.CanContentScroll="False">
                    <ListView.View>
                        <GridView>
                            <!--==============================================-->


                            <GridViewColumn Header="Name" >
                                <GridViewColumn.CellTemplate>

                                    <DataTemplate>
                                        <Button Command="{Binding ElementName=historylist,Path=DataContext.ShowOldConversationCommand}" CommandParameter="{Binding ListOfMessages}" 
                                                Margin="0,0,0,0"  >
                                            <TextBlock TextWrapping="Wrap" Text="{Binding Path=Name}" />
                                        </Button>

                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                        </GridView>
                    </ListView.View>
                </ListView>
            </StackPanel>


        </Grid>
    </Border>

</Window>